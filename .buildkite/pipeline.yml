steps:
  - label: ":bazel: Build & Test"
    timeout_in_minutes: 30
    commands:
      - set -euo pipefail
      - export PATH="$PWD/.buildkite/bin:$PATH"
      - mkdir -p .buildkite/bin ~/.cache/bazel ~/.cache/bazelisk ~/.cache/bazel-disk-cache ~/.cache/bazel-repo
      
      # Install Bazelisk (latest from bazel-contrib/setup-bazel)
      - |
        if ! command -v bazel >/dev/null 2>&1; then
          if command -v curl >/dev/null 2>&1; then
            curl -sSL --retry 3 -o .buildkite/bin/bazelisk https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64
          else
            wget -q -O .buildkite/bin/bazelisk https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64
          fi
          chmod +x .buildkite/bin/bazelisk
          ln -s bazelisk .buildkite/bin/bazel
        fi
      
      # Configure BuildBuddy remote cache
      - |
        if [ -n "${BUILDBUDDY_API_KEY:-}" ]; then
          echo "‚úÖ BuildBuddy API key is set"
          printf 'common --remote_cache=grpcs://remote.buildbuddy.io\n' > .bazelrc.remote.ci
          printf 'common --remote_header=x-buildbuddy-api-key=%s\n' "${BUILDBUDDY_API_KEY}" >> .bazelrc.remote.ci
          printf 'common --remote_timeout=60s\n' >> .bazelrc.remote.ci
          printf 'common --remote_upload_local_results=true\n' >> .bazelrc.remote.ci
          printf 'common --bes_results_url=https://app.buildbuddy.io/invocation/\n' >> .bazelrc.remote.ci
          printf 'common --remote_executor=grpcs://remote.buildbuddy.io\n' >> .bazelrc.remote.ci
          printf 'common --remote_local_fallback\n' >> .bazelrc.remote.ci
          printf 'common --strategy=TestRunner=remote,local\n' >> .bazelrc.remote.ci
          printf 'common --strategy=GoLink=remote,local\n' >> .bazelrc.remote.ci
          printf 'common --strategy=GoCompile=remote,local\n' >> .bazelrc.remote.ci
          printf 'common --remote_cache_compression\n' >> .bazelrc.remote.ci
          printf 'common --remote_download_toplevel\n' >> .bazelrc.remote.ci
          echo "‚úÖ BuildBuddy remote cache configured"
          echo "üìä Monitor builds at: https://app.buildbuddy.io"
        else
          echo "‚ö†Ô∏è  BuildBuddy API key not set - skipping remote cache"
        fi
      
      # Verify Docker availability
      - |
        if command -v docker >/dev/null 2>&1 && docker info >/dev/null 2>&1; then
          echo "‚úÖ Docker available"
          docker version
          TEST_FILTERS=""
        else
          echo "‚ö†Ô∏è  Docker not available; excluding integration/local tests"
          TEST_FILTERS="--test_tag_filters=-integration,-local"
        fi
      
      # Run tests and cleanup
      - |
        export PATH="$PWD/.buildkite/bin:$PATH"
        bazel --version || true
        echo "üß™ Running all tests..."
        if command -v docker >/dev/null 2>&1 && docker info >/dev/null 2>&1; then
          echo "‚úÖ Docker available - running all tests"
          bazel test --config=ci --test_output=errors //...
        else
          echo "‚ö†Ô∏è  Docker not available - excluding integration/local tests"
          bazel test --config=ci --test_output=errors --test_tag_filters=-integration,-local //...
        fi
        rm -f .bazelrc.remote.ci || true
    
    artifact_paths:
      - "bazel-testlogs/**/test.log"
