# Common build settings
build --enable_platform_specific_config
build --incompatible_strict_action_env

# Performance
build --experimental_reuse_sandbox_directories
build --nolegacy_external_runfiles
build --experimental_inmemory_dotd_files
build --experimental_inmemory_jdeps_files
# Shared disk cache for action results across builds
build --disk_cache=~/.cache/bazel-disk-cache
build --repository_cache=~/.cache/bazel-repo
# Optimize build parallelism
build --local_resources=cpu=HOST_CPUS
build --local_resources=memory=HOST_RAM*0.8
build --jobs=auto
# Faster analysis
build --nobuild_runfile_links

# Output
build --show_progress_rate_limit=5
build --color=yes
build --curses=yes

# Go specific settings
build --@rules_go//go/config:pure

# Workspace status for version stamping
build --workspace_status_command=$(pwd)/workspace_status.sh

# Always use optimized builds (no cache invalidation, consistent behavior)
# Note: We use explicit goos/goarch in go_binary rules for cross-compilation
# instead of --platforms to maintain cache across all targets
build --compilation_mode=opt
build --stamp
build --strip=always
build --@rules_go//go/config:gc_linkopts=-s,-w
build --linkopt=-buildmode=pie

# Test output
test --test_output=errors
test --test_summary=detailed
# Optimize test execution
test --local_test_jobs=auto
test --test_verbose_timeout_warnings

# Opt config (no-op since opt is already default, kept for backward compatibility)
build:opt --compilation_mode=opt

# Optional: Fast builds for local development (disables optimizations)
build:fast --compilation_mode=fastbuild
build:fast --nostamp
build:fast --strip=never
build:fast --@rules_go//go/config:gc_linkopts=

# Debug builds
build:debug --compilation_mode=dbg
build:debug --strip=never

# CI-specific settings
build:ci --curses=no
build:ci --color=yes
build:ci --announce_rc
build:ci --local_resources=cpu=HOST_CPUS*0.75
build:ci --local_resources=memory=HOST_RAM*0.75
# Speed up analysis phase
build:ci --loading_phase_threads=HOST_CPUS
build:ci --experimental_merged_skyframe_analysis_execution
build:ci --nobuild_event_publish_all_actions

test:ci --test_output=errors
test:ci --test_summary=detailed
test:ci --flaky_test_attempts=2
test:ci --announce_rc

# Remote execution configuration
# Mark tests with 'no-remote-exec' or 'local' tags to run locally
common --modify_execution_info=TestRunner.no-remote-exec=+no-remote-exec
common --modify_execution_info=TestRunner.local=+no-remote-exec
# Platform-specific actions always run locally
common --strategy=PackageTar=local
common --strategy=OCIDescriptor=local
common --strategy=OCIImage=local
common --strategy=OCITarballManifest=local
common --genrule_strategy=local

# Remote cache configuration (optional - requires setup)
# To enable: create .bazelrc.remote with your remote cache settings
# Example for BuildBuddy: build --remote_cache=grpcs://remote.buildbuddy.io
try-import %workspace%/.bazelrc.remote

# CI-specific remote cache (created dynamically in CI)
try-import %workspace%/.bazelrc.remote.ci

# Try to import user-specific .bazelrc
try-import %workspace%/.bazelrc.user