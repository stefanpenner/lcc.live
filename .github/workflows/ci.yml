name: CI

on:
  push:
    branches: [ main, echo ]
  pull_request:
    branches: [ main, echo ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Mount bazel cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/bazel
            ~/.cache/bazelisk
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', 'MODULE.bazel', 'MODULE.bazel.lock', '**/*.bzl') }}
          restore-keys: |
            ${{ runner.os }}-bazel-
      
      - name: Setup Bazelisk
        uses: bazelbuild/setup-bazelisk@v3
      
      - name: Build all targets
        run: bazel build //...
      
      - name: Run all tests
        run: bazel test //... --test_output=errors
      
      - name: Build Docker image binary
        run: bazel build //:lcc-live
      
      - name: Verify binary
        run: |
          ./bazel-bin/lcc-live_/lcc-live --version || true
          file ./bazel-bin/lcc-live_/lcc-live
  
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.3'
      
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m
      
      - name: Setup Bazelisk
        uses: bazelbuild/setup-bazelisk@v3
      
      - name: Check Bazel formatting
        run: |
          if ! bazel run //:gazelle -- --mode=diff; then
            echo "‚ùå Gazelle found differences. Run 'bazel run //:gazelle' to fix."
            exit 1
          fi

